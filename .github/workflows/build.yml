on:
  workflow_dispatch:
  push:
    branches: ["**"]
    paths-ignore:
      - "**/*.md"

name: üèóÔ∏è Build
jobs:
  test:
    strategy:
      fail-fast: false

      matrix:
        type: [linux, windows, windows-static]
        config: [Release]

        include:
          - type: linux
            container: fedora:40
            deps: sudo dnf install -y git cmake gcc gcc-c++ ninja-build ImageMagick ImageMagick-devel ImageMagick-c++-devel

          - type: windows
            deps: choco install --force -y -PackageParameters InstallDevelopmentHeaders=true imagemagick.app

          - type: windows-static
            cmake-args: -A x64 -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded -DMAGICK_ROOT=ImageMagick-Windows
            deps: |
              git clone https://github.com/simplytest/ImageMagick-Windows
              cd ImageMagick-Windows

              ./CloneRepositories.IM7.cmd

              # We could also invoke MS-Build to compile the libraries here, but this is quicker for now :)
              Invoke-WebRequest "https://github.com/simplytest/ImageMagick-Windows/releases/download/v7.1.1/Artifacts.zip" -OutFile Artifacts.zip
              Expand-Archive -Path Artifacts.zip -DestinationPath $PWD.Path

    runs-on: ${{ contains(matrix.type, 'windows') && 'windows-latest' || 'ubuntu-latest' }}
    container: ${{ matrix.container }}

    name: "${{ matrix.type }} (‚öôÔ∏è: ${{ matrix.config }})"

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4

      - name: üß∞ Dependencies
        run: ${{ matrix.deps }}

      - name: üîß Compile
        run: |
          cmake -B build ${{ matrix.cmake-args }}
          cmake --build build --config ${{ matrix.config }}

      - name: üì¶ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.type }}-${{ matrix.config }}
          path: build
